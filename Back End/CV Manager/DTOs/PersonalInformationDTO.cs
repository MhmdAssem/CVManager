// DTOs/PersonalInformationDTO.cs
using System.ComponentModel.DataAnnotations;

namespace CV_Manager.DTOs
{
    /// <summary>
    /// Data Transfer Object for personal information, used for API requests and responses
    /// </summary>
    public class PersonalInformationDTO
    {
        /// <summary>
        /// Unique identifier for the personal information record
        /// </summary>
        public int Id { get; set; }

        /// <summary>
        /// Full name of the person
        /// Required field, cannot be empty or null
        /// </summary>
        [Required(ErrorMessage = "Full name is required")]
        [StringLength(100, ErrorMessage = "Full name cannot exceed 100 characters")]
        public string FullName { get; set; }

        /// <summary>
        /// City of residence
        /// Optional field
        /// </summary>
        [StringLength(50, ErrorMessage = "City name cannot exceed 50 characters")]
        public string CityName { get; set; }

        /// <summary>
        /// Email address
        /// Must be in valid email format if provided
        /// </summary>
        [EmailAddress(ErrorMessage = "Please enter a valid email address")]
        [StringLength(100, ErrorMessage = "Email cannot exceed 100 characters")]
        public string Email { get; set; }

        /// <summary>
        /// Contact mobile number
        /// Required field, must contain only numbers
        /// </summary>
        [Required(ErrorMessage = "Mobile number is required")]
        [RegularExpression(@"^[0-9]*$", ErrorMessage = "Mobile number must contain only numbers")]
        [StringLength(15, ErrorMessage = "Mobile number cannot exceed 15 digits")]
        public string MobileNumber { get; set; }
    }

    /// <summary>
    /// DTO for creating new personal information records
    /// Excludes the Id field as it will be generated by the database
    /// </summary>
    public class CreatePersonalInformationDTO
    {
        [Required(ErrorMessage = "Full name is required")]
        [StringLength(100, ErrorMessage = "Full name cannot exceed 100 characters")]
        public string FullName { get; set; }

        [StringLength(50, ErrorMessage = "City name cannot exceed 50 characters")]
        public string CityName { get; set; }

        [EmailAddress(ErrorMessage = "Please enter a valid email address")]
        [StringLength(100, ErrorMessage = "Email cannot exceed 100 characters")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Mobile number is required")]
        [RegularExpression(@"^[0-9]*$", ErrorMessage = "Mobile number must contain only numbers")]
        [StringLength(15, ErrorMessage = "Mobile number cannot exceed 15 digits")]
        public string MobileNumber { get; set; }
    }
}